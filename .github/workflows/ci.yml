name: CI
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
  workflow_dispatch: {}

jobs:
  all:
    runs-on: ubuntu-latest

    container:
      image: archlinux:multilib-devel

    defaults:
      run:
        shell: sh -ec "runuser runner {0}" # assume the runner user except where overridden by root

    env:
      DEBUGINFOD_URLS: "https://debuginfod.archlinux.org" # profile thus debuginfod.sh is not executed
      DEBUGINFOD_CACHE_PATH: "/tmp/debuginfod_client"

    steps:
      - uses: actions/checkout@v4

      - name: create user
        shell: sh -e {0}
        # magic numbers and names not available in environment
        run: |
          groupadd --gid 118 docker
          useradd -m -s /bin/sh --uid 1001 --gid docker runner

      - name: set source permissions
        run: chown -R runner:docker .
        shell: sh -e {0}

      - name: install packages
        shell: sh -e {0}
        run: .github/workflows/packages/base/install.sh

      - run: make CC=gcc   CXX=g++     clean
      - run: make CC=gcc   CXX=g++     all
      - run: make CC=gcc   CXX=g++     test
      - run: make CC=gcc   CXX=g++     test-vg

      - run: make clean cppcheck

      - run: make CC=clang CXX=clang++ clean
      - run: make CC=clang CXX=clang++ all
      - run: make CC=clang CXX=clang++ test
      - run: make CC=clang CXX=clang++ test-vg

      - name: build lib32-yaml-cpp package
        run: .github/workflows/packages/lib32-yaml-cpp/build.sh
      - name: install lib32-yaml-cpp package
        run: .github/workflows/packages/lib32-yaml-cpp/install.sh
        shell: sh -e {0}

      - run: make CC=gcc   CXX=g++     MFLAGS=-m32 clean
      - run: make CC=gcc   CXX=g++     MFLAGS=-m32 test
      - run: make CC=gcc   CXX=g++     MFLAGS=-m32 test-vg

      - run: make CC=clang CXX=clang++ MFLAGS=-m32 clean
      - run: make CC=clang CXX=clang++ MFLAGS=-m32 test
      - run: make CC=clang CXX=clang++ MFLAGS=-m32 test-vg

      - name: build include-what-you-use package
        run: .github/workflows/packages/include-what-you-use/build.sh
      - name: install include-what-you-use package
        run: .github/workflows/packages/include-what-you-use/install.sh
        shell: sh -e {0}

      - run: make clean iwyu

