name: CI
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
jobs:
  discover:
    runs-on: ubuntu-latest

    steps:
      - name: discover_ubuntu
        run: |
          env
          echo "--------"
          whoami
          echo "--------"
          id
          echo "--------"
          ls -lah
          echo "--------"
          ls -lahn
          echo "--------"
          pwd
          echo "--------"
          find .
          echo "--------"

  all:
    runs-on: ubuntu-latest

    container:
      image: archlinux:multilib-devel
      options: --user="1001:118"

    steps:
      # TODO: clean after using pre-built packages
      # - name: deps
      #   run: |
      #     # pacman --noconfirm -Sy

      #     pacman --noconfirm -Sy \
      #     clang \
      #     cmake \
      #     cmocka lib32-cmocka \
      #     cppcheck \
      #     git \
      #     libinput \
      #     llvm \
      #     llvm-libs \
      #     lib32-systemd \
      #     ninja \
      #     valgrind \
      #     wayland lib32-wayland \
      #     wayland-protocols \
      #     yaml-cpp

      # # TODO: commit and use a pre-build package
      # - name: build/install lib32-yaml-cpp
      #   run: |
      #     export CFLAGS="-m32 ${CFLAGS}"
      #     export CXXFLAGS="-m32 ${CXXFLAGS}"
      #     export LDFLAGS="-m32 ${LDFLAGS}"
      #     export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

      #     git clone https://github.com/jbeder/yaml-cpp.git
      #     cd yaml-cpp
      #     git checkout 0.8.0
      #     cmake -GNinja \
      #           -Bbuild \
      #           -DYAML_CPP_BUILD_TESTS=OFF \
      #           -DCMAKE_INSTALL_PREFIX=/usr \
      #           -DCMAKE_INSTALL_LIBDIR=lib32 \
      #           -DBUILD_SHARED_LIBS=ON \
      #           -DYAML_BUILD_SHARED_LIBS=ON \
      #           -DCMAKE_BUILD_TYPE=Release
      #     ninja -C build install

      # # TODO: commit and use a pre-build package
      # - name: build/install iwyu
      #   run: |
      #     git clone https://github.com/include-what-you-use/include-what-you-use.git
      #     cd include-what-you-use
      #     git checkout 0.23
      #     mkdir build
      #     cd build
      #     cmake ..
      #     make install

      - uses: actions/checkout@v4

      - name: discover_archlinux
        run: |
          env
          echo "--------"
          # whoami
          # echo "--------"
          id
          echo "--------"
          ls -lah
          echo "--------"
          ls -lahn
          echo "--------"
          pwd
          echo "--------"
          find .
          echo "--------"


      - name: build gcc
        run: make CC=gcc   CXX=g++                 clean way-displays

#       - name: test gcc
#         run: make CC=gcc   CXX=g++                 clean test

#       - name: build clang
#         run: make CC=clang CXX=clang++             clean way-displays

#       - name: test clang
#         run: make CC=clang CXX=clang++             clean test

#       - name: cppcheck
#         run: make clean cppcheck

#       - name: test gcc 32-bit
#         run: make CC=gcc   CXX=g++     MFLAGS=-m32 clean test

#       - name: test clang 32-bit
#         run: make CC=clang CXX=clang++ MFLAGS=-m32 clean test

#       - name: valgrind gcc
#         run: |
#           . /etc/profile.d/debuginfod.sh
#           make CC=gcc   CXX=g++                    clean test-vg

#       - name: valgrind clang
#         run: |
#           . /etc/profile.d/debuginfod.sh
#           make CC=clang CXX=clang++                clean test-vg

#       - name: valgrind gcc 32-bit
#         run: |
#           . /etc/profile.d/debuginfod.sh
#           make CC=gcc   CXX=g++     MFLAGS=-m32    clean test-vg

#       - name: valgrind clang 32-bit
#         run: |
#           . /etc/profile.d/debuginfod.sh
#           make CC=clang CXX=clang++ MFLAGS=-m32    clean test-vg

#       - name: iwyu
#         run: make clean iwyu

