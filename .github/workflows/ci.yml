name: CI
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master
jobs:
  all:
    runs-on: ubuntu-latest

    container:
      image: archlinux:multilib-devel
      # options: --user="1001:118"
    env:
      DEBUGINFOD_URLS: "https://debuginfod.archlinux.org"
      #   RUNNER_USER: runner
      #   RUNNER_UID: 1001
      #   RUNNER_GROUP: docker
      #   RUNNER_GID: 118

    steps:
      - name: discover_archlinux
        run: |
          env
          echo "--------"
          whoami
          echo "--------"
          id
          echo "--------"
          ls -lah
          echo "--------"
          ls -lahn
          echo "--------"
          pwd
          echo "--------"
          find .
          echo "--------"

      - name: container deps
        run: |
          pacman --noconfirm -Sy \
          clang \
          cmocka \
          cppcheck \
          git \
          libinput \
          valgrind \
          wayland \
          wayland-protocols \
          yaml-cpp

          # su makepkg -c "git clone https://aur.archlinux.org/lib32-yaml-cpp.git /tmp/lib32-yaml-cpp"
          # su makepkg -c "makepkg --dir /tmp/lib32-yaml-cpp"

          # pacman -U --noconfirm "/tmp/lib32-yaml-cpp/lib32-yaml-cpp-0.8.0-1-x86_64.pkg.tar.zst"

          # # TODO: commit and use a pre-build package
          # - name: build/install lib32-yaml-cpp
          #   run: |
          #     export CFLAGS="-m32 ${CFLAGS}"
          #     export CXXFLAGS="-m32 ${CXXFLAGS}"
          #     export LDFLAGS="-m32 ${LDFLAGS}"
          #     export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"

          #     git clone https://github.com/jbeder/yaml-cpp.git
          #     cd yaml-cpp
          #     git checkout 0.8.0
          #     cmake -GNinja \
          #           -Bbuild \
          #           -DYAML_CPP_BUILD_TESTS=OFF \
          #           -DCMAKE_INSTALL_PREFIX=/usr \
          #           -DCMAKE_INSTALL_LIBDIR=lib32 \
          #           -DBUILD_SHARED_LIBS=ON \
          #           -DYAML_BUILD_SHARED_LIBS=ON \
          #           -DCMAKE_BUILD_TYPE=Release
          #     ninja -C build install

          # # TODO: commit and use a pre-build package
          # - name: build/install iwyu
          #   run: |
          #     git clone https://github.com/include-what-you-use/include-what-you-use.git
          #     cd include-what-you-use
          #     git checkout 0.23
          #     mkdir build
          #     cd build
          #     cmake ..
          #     make install

      - uses: actions/checkout@v4

      - name: container deps 32-bit
        run: |
          pacman --noconfirm -Sy \
          lib32-cmocka \
          lib32-systemd \
          lib32-wayland

      - name: build/install lib32-yaml-cpp
        run: |
          pacman --noconfirm -Sy \
          cmake \
          ninja
          useradd makepkg || true
          su makepkg -c "git clone https://aur.archlinux.org/lib32-yaml-cpp.git /tmp/lib32-yaml-cpp"
          su makepkg -c "makepkg --dir /tmp/lib32-yaml-cpp"
          pacman -U --noconfirm "/tmp/lib32-yaml-cpp/lib32-yaml-cpp-0.8.0-1-x86_64.pkg.tar.zst"

      - name: build/install include-what-you-use
        run: |
          useradd makepkg || true
          su makepkg -c "git clone https://aur.archlinux.org/include-what-you-use.git /tmp/include-what-you-use"
          su makepkg -c "makepkg --dir /tmp/include-what-you-use"
          pacman -U --noconfirm "/tmp/include-what-you-use/include-what-you-use-0.23-1-x86_64.pkg.tar.zst"

      - name: include-what-you-use
        run: make clean iwyu

      - name: build gcc
        run: make CC=gcc   CXX=g++     clean way-displays

      - name: test gcc
        run: make CC=gcc   CXX=g++     clean test

      - name: build clang
        run: make CC=clang CXX=clang++ clean way-displays

      - name: test clang
        run: make CC=clang CXX=clang++ clean test

      - name: cppcheck
        run: make                      clean cppcheck

      - name: test valgrind gcc
        run: make CC=gcc   CXX=g++     clean test-vg

      - name: test valgrind clang
        run: make CC=clang CXX=clang++ clean test-vg

      - name: test gcc 32-bit
        run: make CC=gcc   CXX=g++        MFLAGS=-m32 clean test

      - name: test clang 32-bit
        run: make CC=clang CXX=clang++    MFLAGS=-m32 clean test

      - name: test valgrind gcc 32-bit
        run: make CC=gcc      CXX=g++     MFLAGS=-m32 clean test-vg

      - name: test valgrind clang 32-bit
        run: make CC=clang    CXX=clang++ MFLAGS=-m32 clean test-vg

